<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net6.0</TargetFramework>
    <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
    <ImplicitUsings>disable</ImplicitUsings>
    <Nullable>disable</Nullable>
    <Configurations>Game1.0;Game2.0;Release</Configurations>

    <Title>Modding API</Title>
    <Product>Modding API</Product>
    <Authors>Damocles</Authors>
    <Company>Damocles</Company>
    <Description>A modding API that assists the creation of mods for Blasphemous 2</Description>
    <Version>0.3.3</Version>
    
    <TargetName>ModdingAPI</TargetName>
    <GeneratePackageOnBuild>True</GeneratePackageOnBuild>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <RepositoryUrl>https://github.com/BrandenEK/BlasII.ModdingAPI</RepositoryUrl>
  </PropertyGroup>

  <ItemGroup>
    <None Include="..\README.md" Pack="true" PackagePath="\" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="BlasII.ModdingReferences" Version="1.1.0" />
    <PackageReference Include="Il2CppInterop.Runtime" Version="1.4.5" />
    <PackageReference Include="LavaGang.MelonLoader" Version="0.6.1" />
    <PackageReference Include="Lib.Harmony" Version="2.2.2" />
    <PackageReference Include="Newtonsoft.Json" Version="13.0.3" />
  </ItemGroup>

  <!--<ItemGroup Condition=" '$(Configuration)' == 'Game1.0' ">
    <PackageReference Include="BlasII.ModdingReferences" Version="1.1.0" />
  </ItemGroup>

  <ItemGroup Condition=" '$(Configuration)' == 'Game2.0' ">
    <PackageReference Include="BlasII.ModdingReferences" Version="1.1.0" />
  </ItemGroup>-->

  <Target Name="Development" AfterTargets="PostBuildEvent">

    <!-- Get resource files -->
    <PropertyGroup>
      <ResourcesFolder>$(SolutionDir)resources\</ResourcesFolder>
    </PropertyGroup>
    <ItemGroup>
      <DataDlls Include="$(ResourcesFolder)data\*" />
      <DataFiles Include="$(ResourcesFolder)data\$(Product)\*" />
      <Keybindings Include="$(ResourcesFolder)keybindings\*" />
      <Levels Include="$(ResourcesFolder)levels\$(Product)\*" />
      <Localization Include="$(ResourcesFolder)localization\*" />
    </ItemGroup>

    <!-- Copy plugin & resources to development folder -->
    <PropertyGroup>
      <DevFolder>C:\Program Files (x86)\Steam\steamapps\common\Blasphemous 2\Modding\</DevFolder>
    </PropertyGroup>
    <Copy SourceFiles="$(TargetPath)" DestinationFolder="$(DevFolder)plugins" />
    <Copy SourceFiles="@(DataDlls)" DestinationFolder="$(DevFolder)data" />
    <Copy SourceFiles="@(DataFiles)" DestinationFolder="$(DevFolder)data\$(Product)" />
    <Copy SourceFiles="@(Keybindings)" DestinationFolder="$(DevFolder)keybindings" />
    <Copy SourceFiles="@(Levels)" DestinationFolder="$(DevFolder)levels\$(Product)" />
    <Copy SourceFiles="@(Localization)" DestinationFolder="$(DevFolder)localization" />

    <!-- Export & zip all mod files -->
    <PropertyGroup>
      <ExportFolder>$(SolutionDir)publish\$(TargetName)\</ExportFolder>
    </PropertyGroup>
    <Copy SourceFiles="$(TargetPath)" DestinationFolder="$(ExportFolder)plugins" />
    <Copy SourceFiles="@(DataDlls)" DestinationFolder="$(ExportFolder)data" />
    <Copy SourceFiles="@(DataFiles)" DestinationFolder="$(ExportFolder)data\$(Product)" />
    <Copy SourceFiles="@(Keybindings)" DestinationFolder="$(ExportFolder)keybindings" />
    <Copy SourceFiles="@(Levels)" DestinationFolder="$(ExportFolder)levels\$(Product)" />
    <Copy SourceFiles="@(Localization)" DestinationFolder="$(ExportFolder)localization" />
    <ZipDirectory SourceDirectory="$(ExportFolder)" DestinationFile="$(ExportFolder)..\$(TargetName).zip" Overwrite="true" />

  </Target>

  <Target Name="AddGeneratedFile" BeforeTargets="BeforeCompile;CoreCompile" Inputs="$(MSBuildAllProjects)" Outputs="$(IntermediateOutputPath)GeneratedFile.cs">
    
    <!-- Create ModInfo class from relevant data -->
    <PropertyGroup>
      <GeneratedText>
        <![CDATA[ namespace $(RootNamespace) { public static class ModInfo { public const string MOD_ID = "$(AssemblyName)"%3B public const string MOD_NAME = "$(Product)"%3B public const string MOD_AUTHOR = "$(Company)"%3B public const string MOD_VERSION = "$(Version)"%3B } } ]]>
      </GeneratedText>
      <GeneratedFilePath>$(IntermediateOutputPath)ModInfo.cs</GeneratedFilePath>
    </PropertyGroup>
    
    <!-- Write ModInfo data to intermediate output -->
    <ItemGroup>
      <Compile Include="$(GeneratedFilePath)" />
      <FileWrites Include="$(GeneratedFilePath)" />
    </ItemGroup>
    <WriteLinesToFile Lines="$(GeneratedText)" File="$(GeneratedFilePath)" WriteOnlyWhenDifferent="true" Overwrite="true" />
    
  </Target>
  
</Project>
